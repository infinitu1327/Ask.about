@inject IViewLocalizer Localizer
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@model Question

@{
    ViewData["Title"] = Localizer["Title"];
    var user = await UserManager.GetUserAsync(User);
}
@section Styles{
    <link href="~/css/Questions/Details.css" rel="stylesheet" />
}

<div class="ui items">
    <div class="item">
        <div class="container">
            <div class="ui large rounded image">
                @if (Model.Attachment != null)
                {
                    <img src="~/Uploads/@Model.Attachment" class="img-rounded img-responsive"/>
                }
                else
                {
                    <img class="img-rounded img-responsive" src="~/img/logo.png"/>
                }
            </div>
        </div>
        
        <div class="content">
            <a class="header"> @Model.Title</a>
            <div class="description">
                <p>@Model.Text</p>
            </div>
        </div>
        <div class="meta">
            @if (Model.Replies.Count == 0 && Model.Likes.Count == 0)
            {
                <a asp-action="Edit" asp-route-id="@Model.Id">@Localizer["Edit"] |</a>
            }

            <a asp-action="Index">@Localizer["Back"]</a>
        </div>
    </div>
</div>

<h3 class="ui dividing header">@Localizer["Replies"]</h3>

@{
    await Html.RenderPartialAsync("../Replies/Index.cshtml", Model.Replies);

    await Html.RenderPartialAsync("../Replies/Create.cshtml", new Reply()
    {
        Question = Model
    });
}


@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/js/Comments/Index.js"></script>
<script src="~/js/Replies/Index.js"></script>
}