@inject IViewLocalizer Localizer
@inject UserManager<User> UserManager

@model List<Comment>

@{
    var user = await UserManager.GetUserAsync(User);
}

@foreach (var comment in Model)
{
    <div class="comments">
        <div class="comment">
            <a class="avatar">
                @if (comment.User.Photo == null)
                {
                    <img id="img" class="dz-message dz-preview dz-processing dz-image-preview dz-success dz-complete" src="~/img/NoAvatar.png" />
                }
                else
                {
                    <img id="img" class="dz-message dz-preview dz-processing dz-image-preview dz-success dz-complete" src="~/Uploads/@comment.User.Photo" />
                }
            </a>
            <div class="content">
                <a class="author">@comment.User.UserName</a>
                <div class="metadata">
                    <span class="date">5 days ago</span>
                </div>
                <div class="text">
                    @comment.Text
                </div>
                <div class="actions">
                    @if (comment.Attachment != null)
                    {
                        <div class="panel-body">
                            <img class="img-rounded img-responsive" src="~/Uploads/@comment.Attachment" />
                        </div>
                    }
                    
                    @if (user != null)
                    {
                        if (!comment.User.Equals(user))
                        {
                            var like = comment.Likes.SingleOrDefault(l => l.User.Equals(user) && l.Comment.Equals(comment));
                            if (like != null)
                            {
                                switch (like.IsLiked)
                                {
                                    case null:
                                        <i class="thumbs outline up icon" onclick="likeComment(this, @comment.Id)">@comment.Likes.Count(l => l.IsLiked == true)</i>
                                        <i class="thumbs outline down icon" onclick="dislikeComment(this, @comment.Id)">@comment.Likes.Count(l => l.IsLiked == false)</i>
                                        break;
                                    case true:
                                        <i class="thumbs up icon" onclick="removeLikeComment(this, @comment.Id)">@comment.Likes.Count(l => l.IsLiked == true)</i>
                                        <i class="thumbs outline down icon" onclick="dislikeComment(this, @comment.Id)">@comment.Likes.Count(l => l.IsLiked == false)</i>
                                        break;
                                    case false:
                                        <i class="thumbs outline up icon" onclick="likeComment(this, @comment.Id)">@comment.Likes.Count(l => l.IsLiked == true)</i>
                                        <i class="thumbs down icon" onclick="removeDislikeComment(this, @comment.Id)">@comment.Likes.Count(l => l.IsLiked == false)</i>
                                        break;
                                }
                            }
                            else
                            {
                                <i class="thumbs outline up icon" onclick="likeComment(this, @comment.Id)">@comment.Likes.Count(l => l.IsLiked == true)</i>
                                <i class="thumbs outline down icon" onclick="dislikeComment(this, @comment.Id)">@comment.Likes.Count(l => l.IsLiked == false)</i>
                            }
                        }
                        else
                        {
                            if (comment.Likes.Count == 0)
                            {
                                <a asp-controller="Comments" asp-action="Edit" asp-route-id="@comment.Id">@Localizer["Edit"] |</a>
                                <a asp-controller="Comments" asp-action="Delete" asp-route-id="@comment.Id">@Localizer["Delete"]</a>
                                <br />
                            }
                        }
                    }
                    else
                    {
                        <i class="thumbs outline up icon">@comment.Likes.Count(l => l.IsLiked == true)</i>
                        <i class="thumbs outline down icon">@comment.Likes.Count(l => l.IsLiked == false)</i>
                        <br />
                    }
                </div>
            </div>
        </div>
    </div>
}